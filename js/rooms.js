doubles = ['224A', '228', '244C', '252', '321', '322B', '322C', '324', '327', '328', '329', '340A', '340B', '341', '344', '379A', '421C', '422B', '424A', '428', '438', '440', '446', '451', '464', '472', '476', '521C', '522B', '524', '533', '535', '537', '548', '553', '572B', '575', '624A', '627', '628', '631D', '635', '645B', '652', '664', '675', '721', '724', '729', '732', '738B', '780', '821', '824', '832', '833', '840', '866', '875', '878', '921C', '922C', '924', '932', '939', '940', '941', '971', '978', '1021D', '1022B', '1024', '1032', '1036', '1039', '1040', '1046', '1052A', '1064', '1078B'];
singles = ['224B', '229', '244B', '322D', '325', '330', '345', '372', '373', '374', '375', '376', '377', '378', '379B', '380', '421B', '422C', '424B', '426', '427', '429', '447', '448', '450', '452', '465', '466', '473', '474', '475', '477', '478', '479A', '479B', '521B', '522C', '525', '526', '527', '532', '534', '538', '539', '540', '543', '544', '545', '549A', '549B', '550', '551', '552', '564', '565', '566', '569', '570', '571', '572A', '573', '574', '577', '578A', '578B', '624B', '625', '626', '629', '631B', '631C', '632', '633', '636', '637', '638', '639', '640', '643', '644', '645A', '647', '648', '649', '653', '665', '667', '670', '672', '673', '674', '678', '725', '727', '728', '730', '731', '738C', '739', '740', '741B', '743', '744', '746', '747', '748B', '748C', '775', '779', '825', '839', '865', '872', '873', '874', '922D', '925', '936', '938', '946', '972', '973', '974', '975', '976', '977', '979', '1021A', '1022C', '1025', '1031B', '1031C', '1033', '1034', '1038', '1043', '1044', '1045', '1052B', '1065', '1073', '1074', '1075', '1076', '1077', '1078A'];
triples = ['225', '326', '337', '371', '381', '433', '467', '634', '650', '733', '741A', '776', '778', '846', '871', '921B', '931', '933', '945', '966', '1021C', '1066', '1072'];


allRooms = singles.concat(doubles).concat(triples);

var substringMatcher = function(strs) {
  return function findMatches(q, cb) {
    var matches, substringRegex;

    // an array that will be populated with substring matches
    matches = [];

    $.each(strs, function(i, str){
        if (str.slice(0, q.length) == q) matches.push(str);
    })

    cb(matches);
  };
};


$('.typeahead').typeahead({
  hint: true,
  highlight: false,
  minLength: 1,

},

  name: 'rooms',
  source: substringMatcher(allRooms)
});


function changeRoom() {
    room = $('#roomNum').first().val();
    console.log(room);

    if (!~allRooms.indexOf(room)) {
        alert("Room: " + room + " not found :(");
        return
    }

    if (~singles.indexOf(room))      type = "single"
    else if (~doubles.indexOf(room)) type = "double"
    else if (~triples.indexOf(room)) type = "triple"

    setRoom(room, type);

}

$('.typeahead').change(changeRoom);
$('.typeahead').on('typeahead:select', changeRoom);
